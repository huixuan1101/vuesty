$str = '';
$count = 0;
test(100,[1,2,5,10],$str,$count);
echo $count;
exit;
function test($amount,$arr,$str,&$sum){
	if($amount == 0){
		$sum++;
		echo $str.'<br>';
		return true;
	}
	if($amount < 0 || ($amount>0&&empty($arr))){
		return false;
	}
	$count = count($arr);
	$type = $arr[$count - 1];
	if($count == 1 && $amount%$type != 0){
		return false;
	}
	
	array_pop($arr);
	$n = floor($amount/$type);
	
	for ($i=$n; $i >= 0; $i--) {
		$amount_k = $amount - $i*$type;
		if($i == 0){
			$s = $str;
		}else{
			$s = $str.'+'.$i.'*'.$type;
		}
		$ret = test($amount_k,$arr,$s,$sum);
		if($ret == false){
			continue;
		}
	}
}



function test($n,$s){
	if($n == 1){
		echo '1<br>';
		return [1];
	}
	if($n == 2){
		echo $s.'-1<br>';
		echo $s.'1 1<br>';
		return [1,1];
	}
	$arr = test($n-1,$s.'-');
	$arrk[0] = 1;
	$str = '1';
	for ($i=1; $i < $n-1; $i++) { 
		$arrk[$i] = $arr[$i-1] + $arr[$i];
		$str .= ' '.$arrk[$i];
	}
	$str .= ' 1';
	echo $s.$str.'<br>';
	$arrk[$n-1] = 1;
	return $arrk;
}


function kk($n){
	echo str_repeat('-',$n-1).'1<br>';
	echo str_repeat('-',$n-2).'1 1<br>';
	test($n,[1,1],2);
}
kk(10);
exit;
function test($n,$arr,$k){
	if($n == 1){
		return [1];
	}
	if($n == 2){
		return [1,1];
	}
	if($n == $k){
		return $arr;
	}
	$arrk[0] = 1;
	$s= '';
	for ($i=0; $i < $n-$k-1; $i++) { 
		$s .= '-';
	}
	$s .= '1';
	for ($i=1; $i < $k; $i++) {
		$arrk[$i] = $arr[$i-1] + $arr[$i];
		$s .= ' '.$arrk[$i];
	}
	$arrk[$k] = 1;
	$s .= ' 1';
	echo $s.'<br>';
	return test($n,$arrk,$k+1);
}



$j = [
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3],
  [5,3,2,1,4]
];
echo kk($j);
exit;

function kk($arr){
	$c = count($arr);
	for($i = 0;$i < $c;$i++){
		$a[] = 0;
	}
	for($i = $c-1;$i>=0;$i--){
		$a = test($arr[$i],$a);
		print_r($a);
		if(count($a) == 1){
			return $a[0] + $arr[0][0];
		}
	}
}


function test($arr,$arrk){
	$n = count($arr);
	for ($i=0; $i < $n-1; $i++) { 
		if($arr[$i]+$arrk[$i] > $arr[$i+1]+$arrk[$i+1]){
			$arrj[$i] = $arr[$i+1]+$arrk[$i+1];
		}else{
			$arrj[$i] = $arr[$i]+$arrk[$i];
		}
	}
	return $arrj;
}




$j = [
     [2],
    [3,4],
   [6,5,7],
  [4,1,8,3],
];
kk($j);
exit;

function kk($arr){
	$c = count($arr);
	$ar = $arr[0];
	$rou = [$ar[0]];
	for($i = 1;$i<$c;$i++){
		$arrk = $arr[$i];
		$ar = test($arrk,$ar,$rou);
	}
	print_r($ar);
	print_r($rou);
}


function test($arr,$arrk,&$rou){
	$n = count($arr);
	for ($i=0; $i <= $n-1; $i++) { 
		if($i == 0){
			$rouk[$i] = $rou[$i].$arr[0];
			$arr[$i] = $arr[0]+ $arrk[0];
		}else if($i == $n-1){
			$rouk[$i] = $rou[$i-1].$arr[$i];
			$arr[$i] = $arr[$i] + $arrk[$i-1];
		}else{
			if($arr[$i] + $arrk[$i-1] > $arr[$i] + $arrk[$i]){
				$rouk[$i] = $rou[$i].$arr[$i];
				$arr[$i] = $arr[$i] + $arrk[$i];
			}else{
				$rouk[$i] = $rou[$i-1].$arr[$i];
				$arr[$i] = $arr[$i] + $arrk[$i-1];
			}
		}
	}
	$rou = $rouk;
	return $arr;
}


print_r(test([3,1,2,4,4]));exit;
function test($arr){
	$count = count($arr);
	$k = 0;
	for($i = 0;$i<$count;$i++){
		for($j = $i+1;$j<$count;$j++){
			$k++;
			if($arr[$j] == $arr[$i]){
				echo $k;
				return $arr[$j];
			}
		}
	}
}
